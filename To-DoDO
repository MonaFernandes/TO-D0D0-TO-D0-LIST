<!DOCTYPE html>
<html>
<head>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>To-dodo</title>

	<style>
		body {
			margin: 0;
			padding: 0;
			background: url('https://i.pinimg.com/736x/7f/1a/e2/7f1ae26636696b3963be676f2a6847f7.jpg') no-repeat center center fixed;
			background-size: cover;
			color: white;
			font-family: 'Poppins', sans-serif;
			display: flex;
			justify-content: center;
			align-items: flex-start;
			gap: 20px;
			min-height: 100vh;
			padding: 20px;
			box-sizing: border-box;
		}

		.container {
			background: rgba(255, 255, 255, 0.1); /* Translucent white background */
			backdrop-filter: blur(15px); /* Frosted glass effect */
			border-radius: 15px;
			box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.4);
			padding: 20px;
			width: 45%;
			color: white;
		}

		h1 {
			font-size: 26px;
			text-align: center;
			margin-bottom: 20px;
			text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.8);
		}

		.input-group {
			display: flex;
			margin-bottom: 20px;
		}

		.input-group input {
			flex: 1;
			padding: 10px;
			border: none;
			border-radius: 5px 0 0 5px;
			font-size: 16px;
		}

		.input-group button {
			padding: 10px;
			border: none;
			border-radius: 0 5px 5px 0;
			background-color: black;
			color: white;
			font-size: 16px;
			cursor: pointer;
			transition: background-color 0.3s;
		}

		.input-group button:hover {
			background-color: whitesmoke;
		}

		ul {
			list-style-type: none;
			padding: 0;
			margin: 0;
		}

		ul li {
			background-color: rgba(255, 255, 255, 0.9);
			color: black;
			padding: 10px;
			margin: 5px 0;
			border-radius: 5px;
			display: flex;
			justify-content: space-between;
			align-items: center;
			cursor: pointer;
			box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
			transition: transform 0.2s, background-color 0.2s;
		}

		ul li:hover {
			background-color: #f0f0f0;
			transform: scale(1.02);
		}

		.delete-btn {
			background-color: red;
			color: white;
			border: none;
			border-radius: 3px;
			padding: 5px 10px;
			cursor: pointer;
			font-size: 14px;
			transition: background-color 0.3s;
		}

		.delete-btn:hover {
			background-color: darkred;
		}
	</style>
</head>
<body>
	<div class="container">
		<h1>To-do List</h1>
		<div class="row">
			<form onsubmit="add_item(); return false;">
				<div class="input-group">
					<input type="text" placeholder="Enter a task" id="box">
					<button type="button" onclick="add_item()">Add</button>
				</div>
			</form>
		</div>
		<div>
			<ul id="list_items"></ul>
		</div>
	</div>

	<div class="container">
		<h1>Completed Tasks</h1>
		<div>
			<ul id="completed_items"></ul>
		</div>
	</div>

	<script type="text/javascript">
		// Load existing items from localStorage
		window.onload = function() {
			let todoItems = JSON.parse(localStorage.getItem("todoItems")) || [];
			let completedItems = JSON.parse(localStorage.getItem("completedItems")) || [];

			let list_items = document.getElementById("list_items");
			let completed_list = document.getElementById("completed_items");

			// Load todo items
			todoItems.forEach(item => {
				add_task_to_dom(item, list_items, false);
			});

			// Load completed items
			completedItems.forEach(item => {
				add_task_to_dom(item, completed_list, true);
			});
		};

		function add_item() {
			let item = document.getElementById("box");
			let list_items = document.getElementById("list_items");

			if (item.value.trim() !== "") {
				add_task_to_dom(item.value, list_items, false);
				item.value = "";
				update_storage();
			} else {
				alert("Please add a value.");
			}
		}

		function add_task_to_dom(task, list, isCompleted) {
			let make_li = document.createElement("li");
			make_li.textContent = task;

			// If it's a completed task, add a delete button
			if (isCompleted) {
				let delete_btn = document.createElement("button");
				delete_btn.textContent = "Delete";
				delete_btn.className = "delete-btn";
				delete_btn.onclick = function() {
					list.removeChild(make_li);
					update_storage();
				};
				make_li.appendChild(delete_btn);
			} else {
				// Add click event to move task to completed
				make_li.onclick = function() {
					let completed_list = document.getElementById("completed_items");
					list.removeChild(this);
					add_task_to_dom(task, completed_list, true);
					update_storage();
				};
			}

			list.appendChild(make_li);
		}

		function update_storage() {
			let list_items = document.getElementById("list_items");
			let completed_items = document.getElementById("completed_items");

			let todoItems = [];
			for (let li of list_items.children) {
				todoItems.push(li.firstChild.textContent);
			}

			let completedItems = [];
			for (let li of completed_items.children) {
				completedItems.push(li.firstChild.textContent);
			}

			localStorage.setItem("todoItems", JSON.stringify(todoItems));
			localStorage.setItem("completedItems", JSON.stringify(completedItems));
		}
	</script>
</body>
</html>
